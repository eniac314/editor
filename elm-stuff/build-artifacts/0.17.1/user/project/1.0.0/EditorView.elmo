var _user$project$EditorView$addStyle = F2(
	function (css, _p0) {
		var _p1 = _p0;
		return A2(
			_user$project$HtmlZipper$Node,
			_p1._0,
			A2(
				_elm_lang$core$Basics_ops['++'],
				_p1._1,
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_user$project$HtmlZipper$Node,
						A3(
							_user$project$HtmlZipper$Tag,
							_user$project$TagAttr$CssTag(css),
							_elm_lang$core$Native_List.fromArray(
								[]),
							_elm_lang$core$Native_List.fromArray(
								[])),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])));
	});
var _user$project$EditorView$renderer = F2(
	function (res, cssRes) {
		var css = function () {
			var _p2 = cssRes;
			if (_p2.ctor === 'Err') {
				return '';
			} else {
				return _user$project$CssParser$toCssString(_p2._0);
			}
		}();
		var renderer$ = function (_p3) {
			var _p4 = _p3;
			var _p5 = _p4._0;
			return A3(
				_user$project$TagAttr$toTag,
				function (_) {
					return _.tagname;
				}(_p5),
				A2(
					_elm_lang$core$List$map,
					_user$project$TagAttr$toAttr,
					function (_) {
						return _.attr;
					}(_p5)),
				A2(_elm_lang$core$List$map, renderer$, _p4._1));
		};
		var _p6 = res;
		if (_p6.ctor === 'Err') {
			return A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Oh no!'),
						A2(
						_elm_lang$html$Html$br,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						_elm_lang$html$Html$text(_p6._0)
					]));
		} else {
			return renderer$(
				A2(_user$project$EditorView$addStyle, css, _p6._0._0));
		}
	});
var _user$project$EditorView$_p7 = _rtfeldman$elm_css_helpers$Html_CssHelpers$withNamespace('editor');
var _user$project$EditorView$id = _user$project$EditorView$_p7.id;
var _user$project$EditorView$class = _user$project$EditorView$_p7.$class;
var _user$project$EditorView$classList = _user$project$EditorView$_p7.classList;
var _user$project$EditorView$explorer = function (model) {
	var explWindow = function (tags) {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_user$project$EditorView$id(_user$project$EditorCss$ExplWindow)
				]),
			_elm_lang$core$Native_List.fromArray(
				[tags]));
	};
	var sizeExplorer = function () {
		var _p8 = function (_) {
			return _.winSize;
		}(model);
		if (_p8.ctor === 'Nothing') {
			return {ctor: '_Tuple2', _0: 560, _1: 300};
		} else {
			return {ctor: '_Tuple2', _0: (_p8._0.width / 2) | 0, _1: 300};
		}
	}();
	var dbug = function (_) {
		return _.debug;
	}(model);
	var render = function (_p9) {
		var _p10 = _p9;
		var colors = _elm_lang$core$List$reverse(
			_elm_lang$core$Native_List.fromArray(
				['ivory', 'khaki', 'lavender', 'lavenderblush', 'lightcoral', 'lightgreen', 'lemonchiffon', 'thistle', 'mediumspringgreen', 'lightskyblue']));
		var colorPicker = function (xs) {
			colorPicker:
			while (true) {
				var _p11 = xs;
				if (_p11.ctor === '[]') {
					var _v7 = colors;
					xs = _v7;
					continue colorPicker;
				} else {
					return {ctor: '_Tuple2', _0: _p11._0, _1: _p11._1};
				}
			}
		};
		var spacer = function (indent) {
			return _elm_lang$core$Native_Utils.eq(indent, 0) ? '' : A2(
				_elm_lang$core$Basics_ops['++'],
				' ',
				spacer(indent - 1));
		};
		var render$ = F3(
			function (n, cs, _p12) {
				var _p13 = _p12;
				var _p16 = _p13._0;
				var _p14 = colorPicker(cs);
				var c = _p14._0;
				var cs$ = _p14._1;
				var pth = function (_) {
					return _.path;
				}(_p16);
				var tn = function () {
					var _p15 = function (_) {
						return _.tagname;
					}(_p16);
					switch (_p15.ctor) {
						case 'Text':
							return 'Text';
						case 'Markdown':
							return 'Markdown';
						default:
							return _elm_lang$core$Basics$toString(_p15);
					}
				}();
				return A2(
					_elm_lang$html$Html$p,
					_elm_lang$core$Native_List.fromArray(
						[
							_user$project$EditorView$class(
							_elm_lang$core$Native_List.fromArray(
								[])),
							_elm_lang$html$Html_Attributes$style(
							_elm_lang$core$Native_List.fromArray(
								[
									{ctor: '_Tuple2', _0: 'margin', _1: '0.1em'}
								]))
						]),
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text(
								spacer(n)),
								A2(
								_elm_lang$html$Html$button,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$class(
										_elm_lang$core$Native_List.fromArray(
											[_user$project$EditorCss$ExplTag])),
										_elm_lang$html$Html_Attributes$style(
										_elm_lang$core$Native_List.fromArray(
											[
												{ctor: '_Tuple2', _0: 'background-color', _1: c}
											])),
										_elm_lang$html$Html_Events$onClick(
										_user$project$Types$GoTo(pth)),
										_elm_lang$html$Html_Attributes$type$('reset')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(tn)
									]))
							]),
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Native_List.fromArray(
								[
									A2(
									_elm_lang$html$Html$span,
									_elm_lang$core$Native_List.fromArray(
										[
											_user$project$EditorView$classList(
											_elm_lang$core$Native_List.fromArray(
												[
													{ctor: '_Tuple2', _0: 'DebugClass', _1: dbug}
												]))
										]),
									_elm_lang$core$Native_List.fromArray(
										[
											_elm_lang$html$Html$text(
											_elm_lang$core$Basics$toString(pth))
										]))
								]),
							A2(
								_elm_lang$core$List$map,
								A2(render$, n + 3, cs$),
								_p13._1))));
			});
		return A3(render$, 0, colors, _p10._0._0);
	};
	var page = function (_) {
		return _.page;
	}(model);
	var tags = function () {
		var _p17 = page;
		if (_p17.ctor === 'Nothing') {
			return A2(
				_elm_lang$html$Html$span,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[]));
		} else {
			return render(_p17._0);
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$EditorView$id(_user$project$EditorCss$Explorer),
				_elm_lang$html$Html_Attributes$style(
				_elm_lang$core$Native_List.fromArray(
					[
						{ctor: '_Tuple2', _0: 'white-space', _1: 'pre'}
					]))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				explWindow(tags),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Types$Up),
						_elm_lang$html$Html_Attributes$type$('reset')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Left')
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Types$Down),
						_elm_lang$html$Html_Attributes$type$('reset')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Right')
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Types$Left),
						_elm_lang$html$Html_Attributes$type$('reset')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Up')
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Types$Right),
						_elm_lang$html$Html_Attributes$type$('reset')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Down')
					]))
			]));
};
var _user$project$EditorView$renderDictContent = function (model) {
	var _p18 = function (_) {
		return _.parsedCssData;
	}(model);
	if (_p18.ctor === 'Err') {
		return A2(
			_elm_lang$html$Html$span,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[]));
	} else {
		var _p21 = _p18._0;
		var dict = function () {
			var _p19 = function (_) {
				return _.currentDict;
			}(
				function (_) {
					return _.cssExplorer;
				}(model));
			switch (_p19.ctor) {
				case 'CssClass':
					return function (_) {
						return _.classDict;
					}(_p21);
				case 'CssIds':
					return function (_) {
						return _.idDict;
					}(_p21);
				case 'CssPseudos':
					return function (_) {
						return _.pseudoDict;
					}(_p21);
				default:
					return function (_) {
						return _.tagDict;
					}(_p21);
			}
		}();
		var entries = function () {
			var _p20 = function (_) {
				return _.currentPos;
			}(
				function (_) {
					return _.cssExplorer;
				}(model));
			if (_p20.ctor === 'Top') {
				return A2(
					_elm_lang$core$Dict$map,
					F2(
						function (e, xs) {
							return A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$class(
										_elm_lang$core$Native_List.fromArray(
											[_user$project$EditorCss$CssDictEntry])),
										_elm_lang$html$Html_Events$onClick(
										_user$project$Types$FilterCss(
											{ctor: '_Tuple2', _0: e, _1: xs}))
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(e)
									]));
						}),
					dict);
			} else {
				return A2(
					_elm_lang$core$Dict$map,
					F2(
						function (e, xs) {
							return _elm_lang$core$Native_Utils.eq(e, _p20._0._0) ? A2(
								_elm_lang$html$Html$button,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$class(
										_elm_lang$core$Native_List.fromArray(
											[_user$project$EditorCss$CssDictEntry])),
										_user$project$EditorView$id(_user$project$EditorCss$CurrentCssDictEntry),
										_elm_lang$html$Html_Events$onClick(
										_user$project$Types$FilterCss(
											{ctor: '_Tuple2', _0: e, _1: xs})),
										_elm_lang$html$Html_Attributes$type$('reset')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(e)
									])) : A2(
								_elm_lang$html$Html$button,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$class(
										_elm_lang$core$Native_List.fromArray(
											[_user$project$EditorCss$CssDictEntry])),
										_elm_lang$html$Html_Events$onClick(
										_user$project$Types$FilterCss(
											{ctor: '_Tuple2', _0: e, _1: xs})),
										_elm_lang$html$Html_Attributes$type$('reset')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(e)
									]));
						}),
					dict);
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_user$project$EditorView$id(_user$project$EditorCss$CssDictContent)
				]),
			_elm_lang$core$Dict$values(entries));
	}
};
var _user$project$EditorView$renderCssPos = function (model) {
	var pos = A2(
		_elm_lang$html$Html$span,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$EditorView$class(
				_elm_lang$core$Native_List.fromArray(
					[_user$project$EditorCss$Mono])),
				_user$project$EditorView$id(_user$project$EditorCss$CssPosStr)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				function () {
				var _p22 = function (_) {
					return _.currentPos;
				}(
					function (_) {
						return _.cssExplorer;
					}(model));
				if (_p22.ctor === 'Top') {
					return _elm_lang$html$Html$text('Top of file');
				} else {
					return _elm_lang$html$Html$text(
						A2(_elm_lang$core$Basics_ops['++'], 'Category ', _p22._0._0));
				}
			}()
			]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$EditorView$id(_user$project$EditorCss$CssPos)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Currently viewing: '),
						pos
					]))
			]));
};
var _user$project$EditorView$cssExplorer = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$EditorView$id(_user$project$EditorCss$CssExplorerId)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$EditorView$id(_user$project$EditorCss$CssButtons)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$EditorView$id(_user$project$EditorCss$CssExplWindow)
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$EditorView$renderCssPos(model),
								_user$project$EditorView$renderDictContent(model)
							])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_user$project$EditorView$id(_user$project$EditorCss$CssExplButtons)
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$button,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$classList(
										_elm_lang$core$Native_List.fromArray(
											[
												{
												ctor: '_Tuple2',
												_0: 'CurrentDict',
												_1: _elm_lang$core$Native_Utils.eq(
													function (_) {
														return _.currentDict;
													}(
														function (_) {
															return _.cssExplorer;
														}(model)),
													_user$project$Types$CssClass)
											}
											])),
										_elm_lang$html$Html_Events$onClick(
										_user$project$Types$ChangeDict(_user$project$Types$CssClass)),
										_elm_lang$html$Html_Attributes$type$('reset')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$span,
										_elm_lang$core$Native_List.fromArray(
											[]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Class')
											]))
									])),
								A2(
								_elm_lang$html$Html$button,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$classList(
										_elm_lang$core$Native_List.fromArray(
											[
												{
												ctor: '_Tuple2',
												_0: 'CurrentDict',
												_1: _elm_lang$core$Native_Utils.eq(
													function (_) {
														return _.currentDict;
													}(
														function (_) {
															return _.cssExplorer;
														}(model)),
													_user$project$Types$CssIds)
											}
											])),
										_elm_lang$html$Html_Events$onClick(
										_user$project$Types$ChangeDict(_user$project$Types$CssIds)),
										_elm_lang$html$Html_Attributes$type$('reset')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$span,
										_elm_lang$core$Native_List.fromArray(
											[]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Ids')
											]))
									])),
								A2(
								_elm_lang$html$Html$button,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$classList(
										_elm_lang$core$Native_List.fromArray(
											[
												{
												ctor: '_Tuple2',
												_0: 'CurrentDict',
												_1: _elm_lang$core$Native_Utils.eq(
													function (_) {
														return _.currentDict;
													}(
														function (_) {
															return _.cssExplorer;
														}(model)),
													_user$project$Types$CssPseudos)
											}
											])),
										_elm_lang$html$Html_Events$onClick(
										_user$project$Types$ChangeDict(_user$project$Types$CssPseudos)),
										_elm_lang$html$Html_Attributes$type$('reset')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$span,
										_elm_lang$core$Native_List.fromArray(
											[]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Pseudos')
											]))
									])),
								A2(
								_elm_lang$html$Html$button,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$classList(
										_elm_lang$core$Native_List.fromArray(
											[
												{
												ctor: '_Tuple2',
												_0: 'CurrentDict',
												_1: _elm_lang$core$Native_Utils.eq(
													function (_) {
														return _.currentDict;
													}(
														function (_) {
															return _.cssExplorer;
														}(model)),
													_user$project$Types$CssTags)
											}
											])),
										_elm_lang$html$Html_Events$onClick(
										_user$project$Types$ChangeDict(_user$project$Types$CssTags)),
										_elm_lang$html$Html_Attributes$type$('reset')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$span,
										_elm_lang$core$Native_List.fromArray(
											[]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Tags')
											]))
									])),
								A2(
								_elm_lang$html$Html$button,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Events$onClick(_user$project$Types$GoToCssTop),
										_elm_lang$html$Html_Attributes$type$('reset')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$span,
										_elm_lang$core$Native_List.fromArray(
											[]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Top')
											]))
									]))
							]))
					]))
			]));
};
var _user$project$EditorView$renderPath = function (path) {
	var pathStr = A2(
		_elm_lang$html$Html$span,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$EditorView$class(
				_elm_lang$core$Native_List.fromArray(
					[_user$project$EditorCss$Mono])),
				_user$project$EditorView$id(_user$project$EditorCss$PathStr)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$String$join,
					'/',
					_elm_lang$core$List$reverse(
						A2(
							_elm_lang$core$List$map,
							function (_p23) {
								var _p24 = _p23;
								return _elm_lang$core$Basics$toString(_p24._0);
							},
							path))))
			]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$EditorView$id(_user$project$EditorCss$Path)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Current path: '),
						pathStr
					]))
			]));
};
var _user$project$EditorView$renderConsole = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$EditorView$id(_user$project$EditorCss$Console)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$EditorView$class(
						_elm_lang$core$Native_List.fromArray(
							[_user$project$EditorCss$Mono]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						function () {
						var _p25 = function (_) {
							return _.parsedData;
						}(model);
						if (_p25.ctor === 'Err') {
							return A2(
								_elm_lang$html$Html$span,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$class(
										_elm_lang$core$Native_List.fromArray(
											[_user$project$EditorCss$Error]))
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(_p25._0)
									]));
						} else {
							return _elm_lang$html$Html$text('parsing complete');
						}
					}()
					]))
			]));
};
var _user$project$EditorView$renderCssConsole = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$EditorView$id(_user$project$EditorCss$Console)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$EditorView$class(
						_elm_lang$core$Native_List.fromArray(
							[_user$project$EditorCss$Mono]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						function () {
						var _p26 = function (_) {
							return _.parsedCssData;
						}(model);
						if (_p26.ctor === 'Err') {
							return A2(
								_elm_lang$html$Html$span,
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$EditorView$class(
										_elm_lang$core$Native_List.fromArray(
											[_user$project$EditorCss$Error]))
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(_p26._0)
									]));
						} else {
							return _elm_lang$html$Html$text('parsing complete');
						}
					}()
					]))
			]));
};
var _user$project$EditorView$renderEditor = function (model) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$EditorView$renderPath(
			function (_) {
				return _.currPath;
			}(model)),
			A2(
			_elm_lang$html$Html$form,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_user$project$EditorView$class(
							_elm_lang$core$Native_List.fromArray(
								[_user$project$EditorCss$Pane])),
							_user$project$EditorView$id(_user$project$EditorCss$LeftPane)
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$html$Html$textarea,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Events$onInput(_user$project$Types$Store),
									_elm_lang$html$Html_Attributes$rows(15),
									_elm_lang$html$Html_Attributes$cols(45),
									_user$project$EditorView$id(_user$project$EditorCss$Prompt),
									_elm_lang$html$Html_Attributes$spellcheck(false)
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									function () {
									var _p27 = function (_) {
										return _.procString;
									}(model);
									if (_p27.ctor === 'Nothing') {
										return _elm_lang$html$Html$text(
											function (_) {
												return _.rawString;
											}(model));
									} else {
										return _elm_lang$html$Html$text(_p27._0);
									}
								}()
								])),
							A2(
							_elm_lang$html$Html$br,
							_elm_lang$core$Native_List.fromArray(
								[]),
							_elm_lang$core$Native_List.fromArray(
								[])),
							A2(
							_elm_lang$html$Html$button,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Events$onClick(_user$project$Types$Parse),
									_elm_lang$html$Html_Attributes$type$('reset')
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text('Parse')
								])),
							A2(
							_elm_lang$html$Html$button,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Events$onClick(_user$project$Types$Debug),
									_elm_lang$html$Html_Attributes$type$('button')
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text('Debug')
								]))
						])),
					A2(
					_elm_lang$html$Html$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_user$project$EditorView$id(_user$project$EditorCss$RightPane),
							_user$project$EditorView$class(
							_elm_lang$core$Native_List.fromArray(
								[_user$project$EditorCss$Pane]))
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_user$project$EditorView$explorer(model)
						]))
				])),
			_user$project$EditorView$renderConsole(model),
			A2(
			_elm_lang$html$Html$form,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_user$project$EditorView$class(
							_elm_lang$core$Native_List.fromArray(
								[_user$project$EditorCss$Pane])),
							_user$project$EditorView$id(_user$project$EditorCss$LeftPaneCss)
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$html$Html$textarea,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Events$onInput(_user$project$Types$StoreCss),
									_elm_lang$html$Html_Attributes$rows(15),
									_elm_lang$html$Html_Attributes$cols(45),
									_user$project$EditorView$id(_user$project$EditorCss$PromptCss),
									_elm_lang$html$Html_Attributes$spellcheck(false)
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									function () {
									var _p28 = function (_) {
										return _.procCssString;
									}(model);
									if (_p28.ctor === 'Nothing') {
										return _elm_lang$html$Html$text(
											function (_) {
												return _.rawCssString;
											}(model));
									} else {
										return _elm_lang$html$Html$text(_p28._0);
									}
								}()
								])),
							A2(
							_elm_lang$html$Html$br,
							_elm_lang$core$Native_List.fromArray(
								[]),
							_elm_lang$core$Native_List.fromArray(
								[])),
							A2(
							_elm_lang$html$Html$button,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Events$onClick(_user$project$Types$ParseCss),
									_elm_lang$html$Html_Attributes$type$('reset')
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text('Parse Css')
								]))
						])),
					A2(
					_elm_lang$html$Html$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_user$project$EditorView$id(_user$project$EditorCss$RightPaneCss),
							_user$project$EditorView$class(
							_elm_lang$core$Native_List.fromArray(
								[_user$project$EditorCss$Pane]))
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_user$project$EditorView$cssExplorer(model)
						]))
				])),
			_user$project$EditorView$renderCssConsole(model),
			A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_user$project$EditorView$classList(
					_elm_lang$core$Native_List.fromArray(
						[
							{
							ctor: '_Tuple2',
							_0: 'DebugClass',
							_1: function (_) {
								return _.debug;
							}(model)
						}
						]))
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(
						function (_) {
							return _.parsedCssData;
						}(model))),
					_elm_lang$html$Html$text(
					_elm_lang$core$Basics$toString(
						function (_) {
							return _.procCssString;
						}(model)))
				]))
		]);
};
